name: Build, Deploy, and Delete Resumes

on:
  push:
    paths:
      - 'resumes/**/resume.json'
  workflow_dispatch:
    inputs:
      file_path:
        description: 'Path to the resume file to build (e.g., resumes/sample)'
        required: true
        default: 'resumes/sample'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      build_resumes: ${{ steps.filter.outputs.build_resumes }}
      delete_resumes: ${{ steps.filter.outputs.delete_resumes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to compare commits

      - name: Find changed resumes
        id: filter
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            # Detect added/modified resumes
            ADDED_MODIFIED=$(git diff --name-only --diff-filter=AM ${{ github.event.before }} ${{ github.event.after }} | grep 'resumes/.*/resume.json' | xargs -I {} dirname {} | sort -u)
            if [ -z "$ADDED_MODIFIED" ]; then
              JSON_BUILD="[]"
            else
              JSON_BUILD=$(echo "$ADDED_MODIFIED" | jq -R . | jq -cs .)
            fi
            echo "build_resumes=$JSON_BUILD" >> $GITHUB_OUTPUT

            # Detect deleted resumes
            DELETED=$(git diff --name-only --diff-filter=D ${{ github.event.before }} ${{ github.event.after }} | grep 'resumes/.*/resume.json' | xargs -I {} dirname {} | sort -u)
            if [ -z "$DELETED" ]; then
              JSON_DELETE="[]"
            else
              JSON_DELETE=$(echo "$DELETED" | jq -R . | jq -cs .)
            fi
            echo "delete_resumes=$JSON_DELETE" >> $GITHUB_OUTPUT
          else
            # For manual trigger, only build is supported
            echo 'build_resumes=["${{ github.event.inputs.file_path }}"]' >> $GITHUB_OUTPUT
            echo 'delete_resumes=[]' >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.build_resumes != '[]' }}
    strategy:
      matrix:
        resume_path: ${{ fromJson(needs.detect-changes.outputs.build_resumes) }}

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-nodemodules-${{ hashFiles('**/package-lock.json') }}

    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Make scripts executable
      run: chmod +x scripts/build-resume.sh

    - name: Build resume
      id: build_step
      run: ./scripts/build-resume.sh
      env:
        FILE_PATH: ${{ matrix.resume_path }}

    - name: Upload resume artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build_step.outputs.artifact_name }}
        path: |
          ${{ matrix.resume_path }}/index.html
          ${{ matrix.resume_path }}/resume.html
          ${{ matrix.resume_path }}/resume.pdf

  deploy:
    runs-on: ubuntu-latest
    needs: [detect-changes, build]
    if: ${{ needs.detect-changes.outputs.build_resumes != '[]' }}
    strategy:
      matrix:
        resume_path: ${{ fromJson(needs.detect-changes.outputs.build_resumes) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set artifact name
        id: vars
        run: echo "artifact_name=$(basename ${{ matrix.resume_path }})" >> $GITHUB_OUTPUT

      - name: Download resume artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.vars.outputs.artifact_name }}
          path: ${{ matrix.resume_path }}

      - name: Make scripts executable
        run: chmod +x scripts/deploy-resume.sh

      - name: Deploy resume
        env:
          FILE_PATH: ${{ matrix.resume_path }}
          GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT }}
          DEST_USERNAME: ${{ github.actor }}
          COMMIT_MESSAGE: "chore: updated resume from ${{ github.sha }}"
        run: ./scripts/deploy-resume.sh

  delete:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.delete_resumes != '[]' }}
    strategy:
      matrix:
        resume_path: ${{ fromJson(needs.detect-changes.outputs.delete_resumes) }}

    steps:
      - uses: actions/checkout@v4

      - name: Make script executable
        run: chmod +x scripts/delete-repo.sh

      - name: Set DEST_REPO_NAME
        run: echo "DEST_REPO_NAME=$(basename ${{ matrix.resume_path }})-resume" >> $GITHUB_ENV

      - name: Delete repository
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT }}
          DEST_USERNAME: ${{ github.actor }}
          # DEST_REPO_NAME is now in the environment
        run: ./scripts/delete-repo.sh
